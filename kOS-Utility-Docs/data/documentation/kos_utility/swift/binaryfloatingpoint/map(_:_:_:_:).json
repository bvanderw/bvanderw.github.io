{"kind":"symbol","sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"map","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"minV","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"maxV","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"minR","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"maxR","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Minimum value of the source range","type":"text"}]}],"name":"minV"},{"content":[{"inlineContent":[{"type":"text","text":"Maximum value of the source range"}],"type":"paragraph"}],"name":"maxV"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Minimum value of the target range"}]}],"name":"minR"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Maximum value of the target range"}]}],"name":"maxR"}]},{"kind":"content","content":[{"text":"Return Value","level":2,"anchor":"return-value","type":"heading"},{"inlineContent":[{"text":"The mapped value in the target range","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"Alternative range mapping method with individual parameters instead of ClosedRange."},{"type":"text","text":" "},{"type":"text","text":"Useful for cases where range bounds are calculated or passed separately."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Example usage:"}],"type":"paragraph"},{"code":["let normalized = 0.75","let pixel = normalized.map(0.0, 1.0, 0.0, 255.0) \/\/ 191.25"],"syntax":"swift","type":"codeListing"}]}],"hierarchy":{"paths":[["doc:\/\/kos-utility.kOS-Utility\/documentation\/kOS_Utility","doc:\/\/kos-utility.kOS-Utility\/documentation\/kOS_Utility\/Swift","doc:\/\/kos-utility.kOS-Utility\/documentation\/kOS_Utility\/Swift\/BinaryFloatingPoint"]]},"abstract":[{"text":"Maps a value from one range to its equivalent value within another range.","type":"text"}],"variants":[{"paths":["\/documentation\/kos_utility\/swift\/binaryfloatingpoint\/map(_:_:_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/kos-utility.kOS-Utility\/documentation\/kOS_Utility\/Swift\/BinaryFloatingPoint\/map(_:_:_:_:)","interfaceLanguage":"swift"},"metadata":{"roleHeading":"Instance Method","title":"map(_:_:_:_:)","extendedModule":"Swift","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"map","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"modules":[{"name":"kOS_Utility","relatedModules":["Swift"]}],"externalID":"s:SB11kOS_UtilityE3mapyxx_xxxtF","role":"symbol"},"references":{"doc://kos-utility.kOS-Utility/documentation/kOS_Utility":{"role":"collection","title":"kOS_Utility","abstract":[],"kind":"symbol","type":"topic","url":"\/documentation\/kos_utility","identifier":"doc:\/\/kos-utility.kOS-Utility\/documentation\/kOS_Utility"},"doc://kos-utility.kOS-Utility/documentation/kOS_Utility/Swift":{"role":"collection","title":"Swift","abstract":[],"url":"\/documentation\/kos_utility\/swift","kind":"symbol","type":"topic","identifier":"doc:\/\/kos-utility.kOS-Utility\/documentation\/kOS_Utility\/Swift"},"doc://kos-utility.kOS-Utility/documentation/kOS_Utility/Swift/BinaryFloatingPoint":{"kind":"symbol","url":"\/documentation\/kos_utility\/swift\/binaryfloatingpoint","identifier":"doc:\/\/kos-utility.kOS-Utility\/documentation\/kOS_Utility\/Swift\/BinaryFloatingPoint","abstract":[{"type":"text","text":"Extensions to BinaryFloatingPoint providing mathematical utilities, rounding, and comparison operations."}],"fragments":[{"kind":"keyword","text":"extension"},{"kind":"text","text":" "},{"preciseIdentifier":"s:SB","kind":"identifier","text":"BinaryFloatingPoint"}],"type":"topic","title":"BinaryFloatingPoint","navigatorTitle":[{"kind":"identifier","text":"BinaryFloatingPoint"}],"role":"symbol"},"doc://kos-utility.kOS-Utility/documentation/kOS_Utility/Swift/BinaryFloatingPoint/map(_:_:_:_:)":{"type":"topic","abstract":[{"text":"Maps a value from one range to its equivalent value within another range.","type":"text"}],"identifier":"doc:\/\/kos-utility.kOS-Utility\/documentation\/kOS_Utility\/Swift\/BinaryFloatingPoint\/map(_:_:_:_:)","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"map","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"title":"map(_:_:_:_:)","url":"\/documentation\/kos_utility\/swift\/binaryfloatingpoint\/map(_:_:_:_:)"}}}